---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<style is:global>
			:root {
				--accent: 136, 58, 234;
				--accent-light: 224, 204, 250;
				--accent-dark: 49, 10, 101;
				--accent-gradient: linear-gradient(
					45deg,
					rgb(var(--accent)),
					rgb(var(--accent-light)) 30%,
					white 60%
				);
			}

			/* Default to dark theme */
			[data-theme="light"] {
				--background-color: #ffffff;
				--text-color: #000000;
			}
			[data-theme="dark"] {
				--background-color: #13151a;
				--text-color: #ffffff;
			}

			html {
				font-family: system-ui, sans-serif;
				background: var(--background-color);
				color: var(--text-color);
				background-size: 224px;
			}

			code {
				font-family:
					Menlo,
					Monaco,
					Lucida Console,
					Liberation Mono,
					DejaVu Sans Mono,
					Bitstream Vera Sans Mono,
					Courier New,
					monospace;
			}
		</style>
	</head>
	<body>
		<button id="theme-toggle">Toggle Theme</button>
		<slot />
		<script>
			const themeToggle = document.getElementById("theme-toggle");
			const currentTheme = localStorage.getItem("theme") || "dark";
			document.documentElement.setAttribute("data-theme", currentTheme);

			themeToggle.addEventListener("click", () => {
				const theme =
					document.documentElement.getAttribute("data-theme") ===
					"dark"
						? "light"
						: "dark";
				document.documentElement.setAttribute("data-theme", theme);
				localStorage.setItem("theme", theme);
			});
		</script>
	</body>
</html>
